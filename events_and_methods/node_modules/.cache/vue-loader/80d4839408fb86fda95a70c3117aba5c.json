{"remainingRequest":"/home/caio/.config/yarn/global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/caio/Área de Trabalho/vue_concepts/events_and_methods/app.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/caio/Área de Trabalho/vue_concepts/events_and_methods/app.vue","mtime":1618190474814},{"path":"/home/caio/.config/yarn/global/node_modules/babel-loader/lib/index.js","mtime":1616537793640},{"path":"/home/caio/.config/yarn/global/node_modules/cache-loader/dist/cjs.js","mtime":1616537793644},{"path":"/home/caio/.config/yarn/global/node_modules/vue-loader/lib/index.js","mtime":1616537794588}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIENyaWFuZG8gZGlyZXRpdmEgcHJvcHJpYQpjb25zdCBmb2N1cyA9IHsKICAvLyBRdWFuZG8gYSBkaXJldGl2YSDDqSBpbnNlcmlkYSwgcmVjZWJvIGFsZ3VucyBwYXJhbXMgKGVsID0gZWxlbWVudCkKICBpbnNlcnRlZDogKGVsKSA9PiB7CiAgICBlbC5mb2N1cygpOwogIH0sCn07CgovLyBDb21wb25lbnRlOgpleHBvcnQgZGVmYXVsdCB7CiAgLy8gUmVnaXN0cmFuZG8gZGlyZXRpdmFzCiAgZGlyZWN0aXZlczogewogICAgZm9jdXMsCiAgfSwKCiAgZGF0YTogKCkgPT4gKHsKICAgIGN1cnJlbnRUYXNrOiAnJywKICAgIHNob3dMaXN0OiBmYWxzZSwKICAgIHRhc2tzOiBbeyBuYW1lOiAiRmF6ZXIgbyBjdXJzbyIsIGlzRG9uZTogZmFsc2UgfV0sCiAgfSksCgogIC8vUmVnaXN0cmFuZG8gbcOpdG9kb3MKICBtZXRob2RzOiB7CiAgICBoYW5kbGVTaG93TGlzdCgpIHsKICAgICAgLy8gcGFyYSBhY2Vzc2FybW9zIHVtIG3DqXRvZG8gZGVudHJvIGRlIHVtIG3DqXRvZG8sIHByZWNpc2Ftb3MgZGUgdGhpcwogICAgICB0aGlzLnNob3dMaXN0ID0gIXRoaXMuc2hvd0xpc3Q7CiAgICB9LAogICAgY29tcGxldGUodGFzaykgewogICAgICAvLyBBZ29yYSB2b3UgY2hhbWFyIG8gbWFwLCBuw6NvIG8gZmlsdGVyLCBwb2lzIG7Do28gdm91IHJlbW92ZXIgbmFkYSBkYSBsaXN0YQogICAgICAvLyAoZmlsdHJhciksIHZvdSB0ZXIgYSBtZXNtYSBsaXN0IG1hcyBjb20gbyBpc0RvbmUgZmFsc28gb3UgdHJ1ZQogICAgICB0aGlzLnRhc2tzID0gdGhpcy50YXNrcy5tYXAoKHQpID0+IHsKICAgICAgICBpZiAodC5uYW1lID09PSB0YXNrLm5hbWUpIHsKICAgICAgICAgIHJldHVybiB7IC4uLnQsIGlzRG9uZTogIXQuaXNEb25lIH07CiAgICAgICAgfQogICAgICAgIHJldHVybiB7IC4uLnQgfTsKICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlKHRhc2spIHsKICAgICAgLy8gQ3JpYW5kbyB1bSBhcnJheSBub3ZvIHBhcmEgcmVtb3ZlciwgZmlsdHJhIG8gYXJyYXkgY29sb2NhIHRvZG8gbXVuZG8gZGUgdm9sdGEKICAgICAgLy8gbm8gYXJyYXksIG1lbm9zIG8gZGEgY29tcGFyYcOnw6NvCiAgICAgIHRoaXMudGFza3MgPSB0aGlzLnRhc2tzLmZpbHRlcigodCkgPT4gdC5uYW1lICE9PSB0YXNrLm5hbWUpOwogICAgICBjb25zb2xlLmxvZygidGFzayIsIHRhc2spOwogICAgfSwKICAgIGFkZFRhc2soKXsKICAgICAgLy9UZW5obyB1bSBhcnJheSwgY29sb2NhciBtYWlzIHVtIGl0ZW0gbm8gYXJyYXkgZSBkZXBvaXMgemVyYXIgbWV1IGN1cnJlbnRUYXNrCiAgICAgIC8vcGFyIGFvIGlucHV0IGZpY2FyIHZhemlvCiAgICAgIHRoaXMudGFza3MucHVzaCh7CiAgICAgICAgbmFtZTogdGhpcy5jdXJyZW50VGFzaywKICAgICAgICBpc0RvbmU6IGZhbHNlLAogICAgICB9KQogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["app.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.vue","sourceRoot":".","sourcesContent":["<template>\n  <div>\n    <h1>Minha lista de tarefas</h1>\n    <!-- Vai disparar ao clicar -->\n    <button @click=\"handleShowList()\">Ver a Lista!</button>\n    <br />\n    <!-- Criando diretiva propria -->\n\n    <input type=\"text\" v-focus v-model=\"currentTask\">\n\n    <ul v-if=\"showList\">\n      <!-- Com o v-if não irá aparecer a lista pois está como false -->\n      <!-- v-for é uma diretiva de iteração -->\n      <li v-for=\"(task, index) in tasks\"\n       @dblclick=\"complete(task)\"\n       :class=\"{ 'line-through': task.isDone }\"\n       class=\"task-item\"\n       :key=\"`${task}-${index}`\">\n       <!-- O valor não pode se repetir, como não tem index, fazemos assim -->\n        <!-- Registrando um evento de duplo clique -->\n        <!-- v-bind para colocar a classe line-through quando a task for true -->\n        {{ task.name }}\n        <!-- método remove passando um param task que estou percorrendo no v-for -->\n        <button @click=\"remove(task)\">&times;</button>\n        <!-- Ao rodar vai aparecer: \"Fazer o curso\" -->\n\n      </li>\n    </ul>\n    <!-- Se eu quiser a condição oposta ao v-if anterior: -->\n    <p v-else>Lista de tarefas está escondida, clique no botão!</p>\n  </div>\n</template>\n\n<script>\n// Criando diretiva propria\nconst focus = {\n  // Quando a diretiva é inserida, recebo alguns params (el = element)\n  inserted: (el) => {\n    el.focus();\n  },\n};\n\n// Componente:\nexport default {\n  // Registrando diretivas\n  directives: {\n    focus,\n  },\n\n  data: () => ({\n    currentTask: '',\n    showList: false,\n    tasks: [{ name: \"Fazer o curso\", isDone: false }],\n  }),\n\n  //Registrando métodos\n  methods: {\n    handleShowList() {\n      // para acessarmos um método dentro de um método, precisamos de this\n      this.showList = !this.showList;\n    },\n    complete(task) {\n      // Agora vou chamar o map, não o filter, pois não vou remover nada da lista\n      // (filtrar), vou ter a mesma list mas com o isDone falso ou true\n      this.tasks = this.tasks.map((t) => {\n        if (t.name === task.name) {\n          return { ...t, isDone: !t.isDone };\n        }\n        return { ...t };\n      });\n    },\n    remove(task) {\n      // Criando um array novo para remover, filtra o array coloca todo mundo de volta\n      // no array, menos o da comparação\n      this.tasks = this.tasks.filter((t) => t.name !== task.name);\n      console.log(\"task\", task);\n    },\n    addTask(){\n      //Tenho um array, colocar mais um item no array e depois zerar meu currentTask\n      //par ao input ficar vazio\n      this.tasks.push({\n        name: this.currentTask,\n        isDone: false,\n      })\n    }\n  },\n};\n</script>\n\n<style scoped>\n.line-through {\n  text-decoration: line-through;\n}\n.task-item{\n  cursor: pointer;\n}\n</style>"]}]}